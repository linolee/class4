<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.sist.user.mapper.userLecture_mapper">
<resultMap type="kr.co.sist.user.domain.LectureView" id="LectureViewInfo">
	<result column="status" property="status"/>
	<result column="lcode" property="lcode"/>
	<result column="lname" property="lname"/>
	<result column="start_date" property="startDate"/>
	<result column="end_date" property="endDate"/>
	<result column="teacher_name" property="teacherName"/>
	<result column="max_member" property="maxMember"/>
	<result column="now_member" property="nowMember"/>
	<result column="client_id" property="clientId"/>
	<result column="name" property="name"/>
	<result column="tel" property="tel"/>
</resultMap>

<select id="selectClassApplyCnt" resultMap="LectureViewInfo">
	select S.lcode, count(*) now_member
		from STUDENTS S
			, CLIENT C
		where S.client_id = C.client_id and	S.status = 'Y'
		group by S.lcode
</select>

<select id="lectureTotalCnt" resultType="int" parameterType="map">
	select count(*)
		from LESSON
		where teacher_name in
        <foreach collection="nameList" item="name"  open="(" close=")" separator=",">
            #{name}
        </foreach>
		<if test="status != null and !status.equals('') and !status.equals('All')">
			and status = #{status}
		</if>
</select>

<select id="selectLectureInfo" resultMap="LectureViewInfo" parameterType="map">
	select *
	from 
		(select
				L.STATUS, L.LNAME, L.LCODE,
				TO_CHAR(L.START_DATE,'yyyy-mm-dd') START_DATE, TO_CHAR(L.END_DATE,'yyyy-mm-dd') END_DATE,
				L.TEACHER_NAME, L.MAX_MEMBER
				, nvl(A.now_member, 0) now_member
				, row_number() over(order by L.lcode desc)r_num
			from LESSON L
		left outer join
			(	
				select S.lcode, count(*) now_member
					from STUDENTS S
						, CLIENT C
					where S.client_id = C.client_id and	S.status = 'Y'
					group by S.lcode
			)		
				A
		on (A.lcode = L.lcode)
		where L.teacher_name in
		        <foreach collection="nameList" item="name"  open="(" close=")" separator=",">
		            #{name}
		        </foreach>
	    		<if test="status != null and !status.equals('') and !status.equals('All')">
					and L.status = #{status}
				</if> 
		) TT
	
	where
		r_num between #{lpvo.startNum} and #{lpvo.endNum}	
</select>

<select id="selectLcode" resultType="String" parameterType="String">
	select LCODE 
	from LESSON
	where TEACHER_NAME = #{ TEACHER_NAME }
</select>

<select id="selectTeachername" resultType="String" parameterType="String">
	select TEACHER_NAME 
	from TEACHER
	where CLIENT_ID = #{CLIENT_ID}
</select>

<select id="selectStudentsList" resultMap="LectureViewInfo" parameterType="String">
	select s.client_id, c.name, c.tel
	from STUDENTS s, CLIENT c
	where s.client_id = c.client_id
		and s.lcode = #{lcode}
</select>

<resultMap type="kr.co.sist.user.domain.StatusCnt" id="StatusCnt">
	<result column="status" property="status"/>
	<result column="num" property="num"/>
</resultMap>
<select id="selectLectureStatus" resultMap="StatusCnt" parameterType="String">
	select L.status, count(*) num
	from lesson L
	where teacher_name = #{value}
    group by L.status
</select>

<!-- 신청 마감 -->
<select id="selectApplyClassStatus" resultType="String" parameterType="map">
	select lcode
		from LESSON
		where teacher_name = #{teacherName}
			and status = 'Y' and due_date &lt; #{today}
</select>
<update id="updateApplyClassStatus" parameterType="String">
	update LESSON
		set status = 'F'
		where lcode = #{value}
		
</update>

<!-- 진행중 -->
<select id="selectProgressClassStatus" resultType="String" parameterType="map">
	select lcode
		from LESSON
		where teacher_name = #{teacherName}
			and status in ('Y', 'F')
			and #{today} &gt;= start_date and #{today} &lt; end_date
</select>
<update id="updateProgressClassStatus" parameterType="String">
	update LESSON
		set status = 'I'
		where lcode = #{value}
</update>

<!-- 종료 -->
<select id="selectEndClassStatus" resultType="String" parameterType="map">
	select lcode
		from LESSON
		where teacher_name = #{teacherName}
		and end_date &lt; #{today}
</select>
<update id="updateEndClassStatus" parameterType="String">
	update LESSON
		set status = 'E'
		where lcode = #{value}
</update>

<!-- 오픈으로 상태값 변경 -->
<update id="changeOpenClass" parameterType="String">
	update LESSON
		set status = 'Y'
		where lcode = #{value}
</update>

</mapper>