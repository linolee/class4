# LOG 레벨
# 로그를 출력하게 되는 시점 : 
# (무조건 찍는다!)TRACE(쿼리가 실행만 되더라도 출력)>DEBUG>INFO>WARN>ERROR(excepption)
#				>FATAL(멈출 정도의 심각한 큰오류일 떄 출력)
# 로그 사용시 장점 : 프로그램과 에러출력 코드를 분리해서 작성할 수 있다.
# 코드가 간결해진다.
# 출력시점을 내마음대로 변경가능하다.(개발할땐 TRACE->나중엔 ERROR)

# Global logging configuration
log4j.rootLogger=TRACE, file,stdout
# MyBatis logging configuration...
#log4j.logger.org.mybatis.example.BlogMapper=TRACE
# Console output...
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n
#stdout 콘솔 출력

#파일로 남기는 추가부분
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
log4j.appender.file.File=C:/dev/mybatis.log 
log4j.appender.Threshold=DEBUG
log4j.appender.file.Append=true 
log4j.appender.file.DatePattern='.'yyyy-MM-dd'.log' 
log4j.appender.file.layout=org.apache.log4j.PatternLayout 
log4j.appender.file.layout.ConversionPattern=[%p], %d{yyyy-MM-dd HH:mm:ss}, %m %n 
log4j.appender.file.encoding=UTF-8
  